---
# Tasks to decommission a VM in a given folder
- name: get info for {{ curr_vm }} in {{ curr_folder }}
  community.vmware.vmware_guest_info:
    hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
    username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
    password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
    datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
    folder: "{{ curr_folder }}"
    uuid: "{{ curr_uuid }}"
    validate_certs: no
  register: reg_guest_info
  no_log: yes
  ignore_errors: yes
- block:
  - name: update list of VMs to be decommissioned
    ansible.builtin.set_fact:
      decomm_vm_list: "{{ decomm_vm_list|default([]) + [curr_folder + ': ' + curr_vm] }}"
  - name: stop {{ curr_vm }}
    ansible.builtin.include_tasks:
      file: task_poweroff_vm.yml
      apply:
        vars:
          folder_name: "{{ curr_folder }}"
          vm_name: "{{ curr_vm }}"
          vm_uuid: "{{ curr_uuid }}"
  - name: rename {{ curr_vm }}
    ansible.builtin.include_tasks:
      file: task_rename_vm.yml
      apply:
        vars:
          vm_name: "{{ curr_vm }}"
          vm_moid: "{{ reg_guest_info.instance.moid }}"
    when: curr_vm is not search('decomm')
  - name: update description for {{ curr_vm }}
    ansible.builtin.include_tasks:
      file: task_update_vm_description.yml
      apply:
        vars:
          vm_name: "{{ curr_vm }}"
          vm_uuid: "{{ curr_uuid }}"
  - name: update date-todecomm attribute for {{ curr_vm }}
    ansible.builtin.include_tasks:
      file: task_update_vm_attribute.yml
      apply:
        vars:
          folder_name: "{{ curr_folder }}"
          vm_name: "{{ curr_vm }}"
          vm_uuid: "{{ curr_uuid }}"
          attribute_name: 'date-todecomm'
          attribute_value: "{{ '%Y-%m-%d' | strftime(ansible_date_time.epoch|int + 30*24*3600) }}"
  when:
    - reg_guest_info.instance.customvalues|dict2items|selectattr('key','search','date-todecomm')|list != {}
    - (ansible_date_time.date|to_datetime('%Y-%m-%d') - reg_guest_info.instance.customvalues|dict2items|selectattr('key','search','date-created')|map(attribute='value')|list|join|to_datetime('%Y-%m-%d')).days|int >= datacenter.primary.vm_age
    - reg_guest_info.instance.customvalues|dict2items|selectattr('key','search','team-contact1')|map(attribute='value')|list|join == '' or reg_guest_info.instance.customvalues|dict2items|selectattr('key','search','team-contact2')|map(attribute='value')|list|join == '' or reg_guest_info.instance.customvalues|dict2items|selectattr('key','search','team-mailer')|map(attribute='value')|list|join == ''
- ansible.builtin.fail:
    msg: VMs in this VCenter do not have the required custom attributes for the VM decommissioning process
  when: reg_guest_info.instance.customvalues|dict2items|selectattr('key','search','date-todecomm')|list == {}